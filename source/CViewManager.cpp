#include "CViewManager.h"

///////////////////////////////////////////////////////////////////////////////////////////
// Constructor en Deconstructor
///////////////////////////////////////////////////////////////////////////////////////////
CViewManager::CViewManager()
{
	m_hParent = NULL;
	m_hInstance = NULL;
}

CViewManager::~CViewManager()
{
}

///////////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
///////////////////////////////////////////////////////////////////////////////////////////
void CViewManager::InitViews(HWND hParent, HINSTANCE hInstance)
{
	KillViews();
	m_View1.Create(hParent, hInstance, VIEW_ID_1);
}

///////////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
///////////////////////////////////////////////////////////////////////////////////////////
void CViewManager::ResizeViews(int nWidth, int nHeight)
{
	RECT rc1 = {10, 10, nWidth-20, nHeight-20};
	m_View1.Resize(rc1);
}

///////////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
///////////////////////////////////////////////////////////////////////////////////////////
void CViewManager::KillViews()
{
	m_View1.KillView();
}

///////////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
///////////////////////////////////////////////////////////////////////////////////////////
void CViewManager::UseView(int index)
{
	m_View1.UseView();
}
